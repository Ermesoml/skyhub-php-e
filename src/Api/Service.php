<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  ${MAGENTO_MODULE_NAMESPACE}
 * @package   ${MAGENTO_MODULE_NAMESPACE}_${MAGENTO_MODULE}
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */

namespace SkyHub\Api;

use GuzzleHttp\Client as HttpClient;

class Service
{
    
    /** @var HttpClient */
    protected $_client = null;
    
    /** @var array */
    protected $_options = [];
    
    /** @var array */
    protected $_headers = [];
    
    /** @var self */
    private static $_instance = null;
    
    
    /**
     * A protected constructor prevents that a any instance is created outside this class by using the `new` operator.
     */
    protected function __construct()
    {
        $this->_options['timeout'] = 15;
    }
    
    
    /**
     * A private __clone method prevents this class to be cloned by any other class.
     *
     * @return void
     */
    private function __clone()
    {
    }
    
    
    /**
     * A private __wakeup method prevents this object to be unserialized.
     *
     * @return void
     */
    private function __wakeup()
    {
    }
    
    
    /**
     * @param string $email
     * @param string $apiKey
     * @param string $token
     *
     * @return $this
     */
    public function init($email, $apiKey, $token, array $headers = [], array $options = [])
    {
        foreach ($headers as $key => $value) {
            $this->_headers[$key] = $value;
        }
        
        foreach ($options as $key => $value) {
            $this->_options[$key] = $value;
        }
        
        $this->_headers['X-User-Email'] = $email;
        $this->_headers['X-Api-Key'] = $apiKey;
        $this->_headers['X-Accountmanager-Key'] = $token;
        $this->_headers['Accept'] = 'application/json';
        $this->_headers['Content-Type'] = 'application/json';
        
        $baseUri = 'https://api.skyhub.com.br';
        
        $this->getClient($baseUri);
        
        return $this;
    }
    
    
    /**
     * @return Service
     */
    public static function getInstance()
    {
        if (null === self::$_instance) {
            self::$_instance = new self();
        }
        
        return self::$_instance;
    }
    
    
    /**
     * @return bool
     */
    public function checkService()
    {
        /**
         * @todo Create the logic to verify if the connection is working.
         */
        return true;
    }
    
    
    /**
     * @return array
     */
    protected function getDefaultOptions()
    {
        return $this->_options;
    }
    
    
    /**
     * @param null|string $uri
     * @param array|null  $options
     *
     * @return HttpClient
     */
    protected function getClient($baseUri = null, $options = null)
    {
        if (null === $this->_client) {
            $this->_client = new HttpClient([
                'base_url' => $baseUri,
            ]);
        }
        
        return $this->_client;
    }
    
}
