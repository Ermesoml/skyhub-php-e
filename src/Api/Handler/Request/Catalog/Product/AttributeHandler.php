<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  ${MAGENTO_MODULE_NAMESPACE}
 * @package   ${MAGENTO_MODULE_NAMESPACE}_${MAGENTO_MODULE}
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */

namespace SkyHub\Api\Handler\Request\Catalog\Product;

use SkyHub\Api\DataTransformers\Catalog\Product\Attribute\Create as CreateHandler;
use SkyHub\Api\DataTransformers\Catalog\Product\Attribute\Update as UpdateHandler;
use SkyHub\Api\Handler\Request\HandlerAbstract;
use SkyHub\Api\Handler\Response\HandlerInterface;

class AttributeHandler extends HandlerAbstract
{
    
    /**
     * @param string $code
     * @param string $label
     * @param array  $options
     *
     * @return HandlerInterface
     */
    public function create($code, $label, array $options = [])
    {
        $transformer = new CreateHandler($code, $label, $options);
        $body        = $transformer->output();
        
         /** @var HandlerInterface $response */
        $response = $this->service()->post($this->baseUrlPath(), $body, $options);
        
        return $response;
    }
    
    
    /**
     * @param string $code
     * @param string $label
     * @param array  $options
     *
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function update($code, $label, array $options = [])
    {
        $transformer = new UpdateHandler($code, $label, $options);
        $body        = $transformer->output();
    
        /** @var HandlerInterface $response */
        $this->service()->put($this->baseUrlPath($code), $body, $options);
    
        return $response;
    }
    
    
    /**
     * @param string $suffix
     *
     * @return string
     */
    protected function baseUrlPath($suffix = null)
    {
        $baseUrlPath =  '/attributes';
        
        if (!empty($suffix)) {
            $baseUrlPath .= '/' . $suffix;
        }
        
        return $baseUrlPath;
    }

}
